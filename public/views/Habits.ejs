<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Habit Tracker</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .habit-content {
        display: flex;
        align-items: center;
        flex-grow: 1;
      }
      .habit-text {
        margin-left: 10px;
      }

      .state-btn {
        width: 1.5rem;
        height: 1.6rem;
        display: flex;
        justify-content: center;
        align-items: center;
      }
    </style>
  </head>
  <body>
    <div class="container mt-4">
      <h2 class="text-center mb-4">My Habits</h2>
      <p id="today-date" class="text-center fw-bold"></p>
      <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
          <button
            class="btn btn-primary mb-3 w-100"
            data-bs-toggle="modal"
            data-bs-target="#addHabitModal"
          >
            Add New Habit
          </button>
          <ul id="habitList" class="list-group">
            <!-- Habit items will be added here -->
          </ul>
        </div>
      </div>
    </div>

    <!-- Add Habit Modal -->
    <div class="modal fade" id="addHabitModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Add New Habit</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <input
              type="text"
              id="newHabit"
              class="form-control"
              placeholder="Enter new habit"
            />
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="button" class="btn btn-primary" onclick="addHabit()">
              Add Habit
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Confirm Delete Modal -->
    <div
      class="modal fade"
      id="confirmDeleteModal"
      tabindex="-1"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Confirm Delete</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            Are you sure you want to delete this habit?
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button type="button" class="btn btn-dark" id="confirmDeleteBtn">
              Delete
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
      window.onfocus = () => {
        window.location.reload();
      };

      document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("today-date").textContent =
          new Date().toLocaleDateString();
        axios
          .get("/allhabits")
          .then((response) => {
            AddHabitsToUI(response.data.habits);
            LoadAllButtonStatuses();
          })
          .catch((err) => {});
      });

      function addHabit() {
        const input = document.getElementById("newHabit");
        const text = input.value.trim();
        axios
          .post("/habit?name=" + text)
          .then((res) => {
            console.log(res);
            AddHabitToUI(res.data.habit);
          })
          .catch((error) => {
            console.log(error);
          });
      }

      function AddHabitToUI(habit) {
        const input = document.getElementById("newHabit");
        const text = input.value.trim();
        if (text) {
          const list = document.getElementById("habitList");
          const li = document.createElement("li");
          li.className = "list-group-item";
          li.innerHTML = `
                    <div data-habitid="${habit._id}" onclick="loadHabit(this)" class="habit-content">
                        <button data-habitid="${habit._id}" class=" btn btn-outline-secondary state-btn" onclick="cycleState(this)" data-state="neutral">

                        </button>
                        <span  class="habit-text">${habit.name}</span>
                    </div>
                    <button class="btn btn-dark btn-sm" onclick="confirmDelete(this.parentElement)">Delete</button>
                `;

          list.appendChild(li);
          input.value = "";
          bootstrap.Modal.getInstance(
            document.getElementById("addHabitModal")
          ).hide();
        }
      }

      function AddHabitsToUI(habits) {
        const list = document.getElementById("habitList");
        for (let index = 0; index < habits.length; index++) {
          const li = document.createElement("li");
          li.className = "list-group-item";
          li.innerHTML = `
                    <div data-habitid="${habits[index]._id}" onclick="loadHabit(this)" class="habit-content">
                        <button data-habitid="${habits[index]._id}" class=" btn btn-outline-secondary state-btn" onclick="cycleState(this)" data-state="neutral">

                        </button>
                        <span class="habit-text">${habits[index].name}</span>
                    </div>
                    <button class="btn btn-dark btn-sm" onclick="confirmDelete(this.parentElement)">Delete</button>
                `;
          list.appendChild(li);
        }
      }

      function LoadAllButtonStatuses() {
        const allStatusButtons = document.querySelectorAll(".state-btn");
        const dateObject = new Date();
        const year = dateObject.getFullYear();
        const day = dateObject.getDate();
        const month = dateObject.getMonth() + 1;
        allStatusButtons.forEach((statusButton) => {
          axios
            .get(
              `/habit/${statusButton.dataset.habitid}/status?year=${year}&month=${month}&day=${day}`
            )
            .then((response) => {
              statusButton.setAttribute("data-state", response.data.status);
              SetVisualForButton(statusButton);
            })
            .catch((err) => {
              console.log(err);
            });
        });
      }

      function SetVisualForButton(statusButton) {
        const state = statusButton.getAttribute("data-state");
        console.log(state);
        switch (state) {
          case "neutral":
            statusButton.classList.remove("btn-success", "btn-danger");
            statusButton.classList.add("btn-outline-secondary");
            statusButton.innerHTML = "";
            break;
          case "hit":
            statusButton.classList.remove(
              "btn-outline-secondary",
              "btn-danger"
            );
            statusButton.classList.add("btn-success");
            statusButton.innerHTML = '<i class="fas fa-check"></i>';
            break;
          case "miss":
            statusButton.classList.remove(
              "btn-outline-secondary",
              "btn-success"
            );
            statusButton.classList.add("btn-danger");
            statusButton.innerHTML = '<i class="fas fa-times"></i>';
            break;
        }
      }

      function confirmDelete(item) {
        const modal = new bootstrap.Modal(
          document.getElementById("confirmDeleteModal")
        );
        modal.show();
        document.getElementById("confirmDeleteBtn").onclick = function () {
          console;
          axios
            .post(`/deletehabit?id=${item.children[0].dataset.habitid}`)
            .then((response) => {
              item.remove();
              modal.hide();
            })
            .catch((err) => {
              console.log(err);
            });
        };
      }

      function cycleState(button) {
        event.stopPropagation();

        const states = ["neutral", "hit", "miss"];
        let currentState = button.getAttribute("data-state");
        const dateObject = new Date();
        const year = dateObject.getFullYear();
        const day = dateObject.getDate();
        const month = dateObject.getMonth() + 1;

        let nextStateIndex = (states.indexOf(currentState) + 1) % states.length;
        let nextState = states[nextStateIndex];
        axios
          .post(
            `/habit/${button.dataset.habitid}/status?year=${year}&month=${month}&day=${day}&to=${nextState}`
          )
          .then((response) => {
            button.setAttribute("data-state", nextState);
            button.className = "btn state-btn";

            switch (nextState) {
              case "neutral":
                button.classList.remove("btn-success", "btn-danger");
                button.classList.add("btn-outline-secondary");
                button.innerHTML = "";
                break;
              case "hit":
                button.classList.remove("btn-outline-secondary", "btn-danger");
                button.classList.add("btn-success");
                button.innerHTML = '<i class="fas fa-check"></i>';
                break;
              case "miss":
                button.classList.remove("btn-outline-secondary", "btn-success");
                button.classList.add("btn-danger");
                button.innerHTML = '<i class="fas fa-times"></i>';
                break;
            }
          })
          .catch((err) => {
            console.log(err);
          });
      }

      function loadHabit(habit) {
        const habitName = document.querySelector(".habit-text").innerHTML;
        window.location.href = `/habit?habitid=${habit.dataset.habitid}&name=${habitName}`;
      }
    </script>
  </body>
</html>
